||General

    Single purpose
        Information aggregation
        Productivity tool

    New svg icon that changes/ collects notifications, 
        bigger and more colorful, alpha transparency for soft edges

    Visualization
        https://github.com/tensorflow/tfjs/tree/master/tfjs-vis




||Architecture

    Manifest


    Background script

        Event handler
            navigate to new page
            remove bookmark
            close a tab

        Only loaded when needed and unloaded when idle


    Content script 


    Options pg


    UI elems

        Browser action 
            Users can always interact with extension
            Icon, tooltip, badge, popup

        Add pages 
            Popups
            tabs.create or window.open() to display HTML files

        Context menu
            Right click images/ hyperlinks/ pages

        Omnibox
            Register a keyword with Chrome's address bar
            Each keystroke is sent to extension, option to provide suggestions in response

        Keyboard shortcut
            Ctrl+shift+F




||Layout

action
    access by hotkey or clicking ext button
    right click for options page 
    click to turn on/ off

background 
    record user input on page
    output suggested words

contentscript 
    takes suggestion from background, style and input on page 
    inject in response to events (typing)

options 
    whitelist websites
    data visualization 
    train models?


...
  word completion suggestion faintly as user types
  hotkey combo to see next word suggestion, or after user finishes typing word and presses space




||Notes

TSF allows browser to run ML models without interacting with backend
    transfer learning- great for privacy (explain to user in terms of service)
    not ideal for training new models
        import * as toxicity from "@tensorflow-models/toxicity";

Client-side ML text models
    Content-based clustering
    Text highlighting
    Emoji recommendation

Supervised learning: use pre-labeled data set to train model
    then classify content based on model weights
    e.g. universal sentence encoder converts sentences to numbers using deep neural network

Issues
    unintended ML bias, lower accuracy

RNN
    recurrent neural networks 
    loops allow persistent info
    multiple copies of same network passing message to its child
    previous outputs used as inputs while having hidden state

LSTM
    type of RNN 
    long short term memory
    Long-term dependencies- "I grew up in FRANCE... I speak [FRENCH]"




||Inspo

https://github.com/dabit3/transilator

https://github.com/martzcodes/tensorflow-toxicity-chrome-extension

https://github.com/cpury/lookie-lookie


Recommendation engine 
https://towardsdatascience.com/build-your-own-clustering-based-recommendation-engine-in-15-minutes-bdddd591d394
https://towardsdatascience.com/understanding-k-means-clustering-in-machine-learning-6a6e67336aa1

Spellcheck
https://towardsdatascience.com/creating-a-spell-checker-with-tensorflow-d35b23939f60
https://towardsdatascience.com/deep-learning-autocorrect-product-and-technical-overview-1c219cee0698
https://towardsdatascience.com/creating-a-spell-checker-with-tensorflow-d35b23939f60
https://datascience.stackexchange.com/questions/16128/algorithms-and-techniques-for-spell-checking

Autocomplete
https://towardsdatascience.com/index-48563e4c1572
https://datascience.stackexchange.com/questions/55521/autocomplete-with-deep-learning
https://jaketae.github.io/study/auto-complete/
https://medium.com/mlearning-ai/how-to-build-an-auto-complete-model-with-tensorflow-js-56c027cafc2f
https://stackoverflow.com/questions/55980085/smart-autocomplete-with-tensorflow-js


||Brainstorming

+ Develop ML in browser and retrain existing models

(Universal sentence encoder for NLP tasks)

+++++++++++++++++++++++++

Spell checker
    seq2seq models

Grammar checker
    machine translation 
    grammar suggestion models
    treat incorrect grammar as "source" lang and correct grammar as "target"

Autocomplete
    statistical language models
    conditional probability 
    n-grams
    Markov models
    Neural language models
    SwiftKey
    press space to complete
    historical probability of words following words + additional weight significance - predictive modelling based on user history

Options 
    autocorrect for spelling and grammar 
    user feedback

+++++++++++++++++++++++++
    

+Data vis 
    TFJS process
    how much time the user spends doing X
        types of content they type
        types of websites
        types of activities
        how long they were online (over a day, week, month)



-Morphological segmentation on highlight
        
-multimodal sentiment analysis (images, video, text)
    emotions 
    polarity, trends of public opinion/ marketing

-textual similarity

-Looking at point on screen
    highlight text
    recommend e-commerce products
        user-based vs item-based
        k-means clustering

-Browser history
    recommend websites

-Voice to text 
    translator
    
-Facial expression
    input emoji
    suggest websites/ songs/ playlists/ videos/ images




||Etc

console.log for Chrome extensions appear in service worker or invisible bg page

CORS policy in manifest.json to load tfjs cdn
manifest v3 doesn't allow external scripts

! ! ! use a build tool like webpack or rollup

content scripts work in isolated worlds
    context of webpage, not extension   
    communicate by message passing
    inject programmatically in reponse to events

action.onClicked not dispatched if extension shows popup on current tab